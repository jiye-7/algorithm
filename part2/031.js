/**
 * 문제31 : 자바스크립트 자료형의 복잡도
 * 다음 배열 내장함수의 시간 복잡도가 O(1)이 아닌 것을 모두 고르시오
 *  1) arr[i]
 *  2) arr.push(5)
 *  3) arr.slice() -> O(n)
 *  4) arr.pop()
 *  5) arr.includes(5) -> O()
 */

/**
 * 시간복잡도: 어떤 알고리즘이 문제를 계산할 때 걸리는 시간을 의미
 *  Big-O 표기법(알고리즘의 성능을 수학적으로 표현해주는 기법)으로 표현할 수 있다.
 *
 * O(1): 입력되는 데이터의 크기와 상관없이 알고리즘이 문제를 해결하는 속도가 모두 일정할 때 표기
 *  ex) array의 원소 개수가 아무리 커져도 해당 메소드들이 작동하는 시간이 일정하다면 그게 O(1)이 된다.
 *
 *  1) arr[i]
 *    -> array의 원소 개수가 많더라도 인덱스에 접근하는 것은 똑같기 때문에 시간복잡도가 O(1)이 된다.
 *
 *  2) arr.push(5)
 *    -> push()는 배열의 가장 끝에 push(매개변수)안의 매개변수 값을 넣어준다. array가 작던지, 크던지 끝에다 추가하는 것이기 때문에 시간복잡도가 O(1)이 된다.
 *
 *  3) arr.slice()
 *    -> arr.slice()에서 slice()는 지정한 start 부터 end까지 복사하여 새로운 객체를 만드는 함수이며,
 *       입력 데이터 크기와 배열의 길이에 따라 처리 시간이 달라지기 때문에
 *       slice(3, 2000)이런식으로 매개변수의 크기가 큰 숫자가 들어오게 되면 반환되는 배열의 크기도 커지기 때문에 배열의 크기가 커지면 커질수록 사용되는 메모리가 크기 때문에 시간 복잡도는 O(n)이 된다.
 *
 *  4) arr.pop()
 *    -> 배열의 가장 끝의 원소를 제거, 배열이 작거나 커도 가장 끝의 원소만 제거하기 때문에 시간복잡도는 O(1)이 된다.
 *
 *  5) arr.includes(5)
 *    -> arr.includes(5)에서 includes()는 배열이 특정 값을 포함하는지 확인하는 함수, 배열 arr에 5가 포함되어 있는지 검사할 때 arr[0]부터 검사하고 최악의 경우는 배열의 마지막 원소까지 검사해야 한다.
 *       배열에 includes(매개변수)의 매개변수 값이 들어있는지 true, false로 반환을 해주기 때문에 배열의 원소의 개수가 많아지면 많아질수록 includes 메소드가 탐색해야되는 값이 늘어나기 때문에 시간복잡도는 O(n)이 된다.
 */

/**
 * O(1) : 입력 데이터에 상관없이 일정한 시간의 알고리즘. (상수 형태)
 * O(n) : 입력 데이터의 크기와 배열의 길이에 비례한 시간이 걸리는 알고리즘. (선형)
 */
